name: CI Sanity Gate

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript compiler
      run: npx tsc --noEmit

    - name: Run ESLint
      run: npx eslint . --ext .ts,.tsx

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

  database-migrations:
    name: Database Migration Check
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run migrations
      run: npx ts-node -r dotenv/config scripts/migrate.ts
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        NODE_ENV: test

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [database-migrations]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Setup database and seed
      run: |
        npx ts-node -r dotenv/config scripts/migrate.ts
        npx ts-node -r dotenv/config scripts/seed-clean.ts
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        NODE_ENV: test

    - name: Build frontend
      run: npm run build
      env:
        NODE_ENV: test

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        SESSION_SECRET: test-secret
        NODE_ENV: test